


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s *************** 
    2 00000000         ; Program written by: Kevin George; Omar Medjaouri
    3 00000000         ; Date Created: 1/28/2013
    4 00000000         ; Last Modified: 1/4/2013  
    5 00000000         ; Section 2-3pm     TA: 
    6 00000000         ; Lab number: 1 
    7 00000000         ; Brief description of the program 
    8 00000000         ; The overall objective of this system is a digital lock
                        
    9 00000000         ; Hardware connections 
   10 00000000         ;  PG3 is switch input  (negative logic) 
   11 00000000         ;  PG4 is switch input  (negative logic) 
   12 00000000         ;  PG2 is LED output (on means unlocked)  
   13 00000000         ; The specific operation of this system  
   14 00000000         ;   unlock if both switches are pressed
   15 00000000         
   16 00000000         ;  This example accompanies the book
   17 00000000         ;  "Embedded Systems: Introduction to the Arm Cortex M3"
                       ,
   18 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2012
   19 00000000         ;  Section 3.3.10, Program 3.12
   20 00000000         ;
   21 00000000         ;Copyright 2012 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   22 00000000         ;   You may use, edit, run or distribute this file
   23 00000000         ;   as long as the above copyright notice remains
   24 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   25 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   26 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   27 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   28 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   29 00000000         ;For more information about my classes, my research, and
                        my books, see
   30 00000000         ;http://users.ece.utexas.edu/~valvano/
   31 00000000         
   32 00000000         ; Making Memory Locations of the Port easier to use.
   33 00000000 40026010 
                       GPIO_PORTG2
                               EQU              0x40026010
   34 00000000 400263FC 
                       GPIO_PORTG_DATA_R
                               EQU              0x400263FC
   35 00000000 40026400 
                       GPIO_PORTG_DIR_R
                               EQU              0x40026400
   36 00000000 40026420 
                       GPIO_PORTG_AFSEL_R
                               EQU              0x40026420
   37 00000000 40026510 
                       GPIO_PORTG_PUR_R
                               EQU              0x40026510
   38 00000000 4002651C 
                       GPIO_PORTG_DEN_R
                               EQU              0x4002651C



ARM Macro Assembler    Page 2 


   39 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   40 00000000 00000040 
                       SYSCTL_RCGC2_GPIOG
                               EQU              0x00000040  ; port G Clock Gati
                                                            ng Control 
   41 00000000         
   42 00000000                 THUMB
   43 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   44 00000000                 EXPORT           Start
   45 00000000         ; Initialize clock.
   46 00000000 4813    Start   LDR              R0, =SYSCTL_RCGC2_R
   47 00000002 F04F 0140       LDR              R1, =SYSCTL_RCGC2_GPIOG
   48 00000006 6001            STR              R1, [R0]
   49 00000008         ; Wait two bus cycles.
   50 00000008 BF00            NOP
   51 0000000A BF00            NOP
   52 0000000C         ; Disable alternate function.
   53 0000000C 4811            LDR              R0, = GPIO_PORTG_AFSEL_R
   54 0000000E 6801            LDR              R1, [R0]
   55 00000010 F021 011C       BIC              R1, R1, #0x1C
   56 00000014 6001            STR              R1, [R0]
   57 00000016         ; Update PORTG direction register.
   58 00000016 4810            LDR              R0, =GPIO_PORTG_DIR_R
   59 00000018 6801            LDR              R1, [R0]
   60 0000001A F041 0104       ORR              R1, R1, #0x04
   61 0000001E F021 0118       BIC              R1, R1, #0x18
   62 00000022 6001            STR              R1, [R0]
   63 00000024         ; Digital Enable.
   64 00000024 480D            LDR              R0, = GPIO_PORTG_DEN_R
   65 00000026 6801            LDR              R1, [R0]
   66 00000028 F041 011C       ORR              R1, R1, #0x1C
   67 0000002C 6001            STR              R1, [R0]
   68 0000002E         ; Loop unto infinity.
   69 0000002E         ; Reading Data from PG3 and PG4
   70 0000002E 480C    update  LDR              R0, =GPIO_PORTG_DATA_R
   71 00000030 6801            LDR              R1, [R0]
   72 00000032         ; Logic Operation: PG2=not(PG3 or PG4)
   73 00000032 F001 0210       AND              R2, R1, #0x10
   74 00000036 F001 0108       AND              R1, R1, #0x08
   75 0000003A EA4F 0161       ASR              R1, R1, #1
   76 0000003E EA4F 02A2       ASR              R2, R2, #2
   77 00000042 EA41 0102       ORR              R1, R1, R2
   78 00000046 F081 0104       EOR              R1, #0x04
   79 0000004A         ; Storing Data to PG2
   80 0000004A 4806            LDR              R0, =GPIO_PORTG2
   81 0000004C 6001            STR              R1, [R0]
   82 0000004E E7EE            B                update
   83 00000050                 ALIGN
   84 00000050                 END
              400FE108 
              40026420 
              40026400 
              4002651C 
              400263FC 
              40026010 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=main.d -



ARM Macro Assembler    Page 3 


omain.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Lu
minary --list=main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 46 in file main.s
   Uses
      At line 44 in file main.s
Comment: Start used once
update 0000002E

Symbol: update
   Definitions
      At line 70 in file main.s
   Uses
      At line 82 in file main.s
Comment: update used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTG2 40026010

Symbol: GPIO_PORTG2
   Definitions
      At line 33 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTG2 used once
GPIO_PORTG_AFSEL_R 40026420

Symbol: GPIO_PORTG_AFSEL_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 53 in file main.s
Comment: GPIO_PORTG_AFSEL_R used once
GPIO_PORTG_DATA_R 400263FC

Symbol: GPIO_PORTG_DATA_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 70 in file main.s
Comment: GPIO_PORTG_DATA_R used once
GPIO_PORTG_DEN_R 4002651C

Symbol: GPIO_PORTG_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 64 in file main.s
Comment: GPIO_PORTG_DEN_R used once
GPIO_PORTG_DIR_R 40026400

Symbol: GPIO_PORTG_DIR_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 58 in file main.s
Comment: GPIO_PORTG_DIR_R used once
GPIO_PORTG_PUR_R 40026510

Symbol: GPIO_PORTG_PUR_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTG_PUR_R unused
SYSCTL_RCGC2_GPIOG 00000040

Symbol: SYSCTL_RCGC2_GPIOG
   Definitions
      At line 40 in file main.s
   Uses
      At line 47 in file main.s
Comment: SYSCTL_RCGC2_GPIOG used once
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 39 in file main.s
   Uses
      At line 46 in file main.s
Comment: SYSCTL_RCGC2_R used once
8 symbols
343 symbols in table
