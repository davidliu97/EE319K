<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [D:\My Dropbox\ArmBook\Individual Examples\UART_1968\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image D:\My Dropbox\ArmBook\Individual Examples\UART_1968\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Tue Apr 10 09:13:56 2012
<BR><P>
<H3>Maximum Stack Usage =         56 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SysCtlClockSet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b8861c]">Reset_Handler</a>
 <LI><a href="#[b887fc]">NmiSR</a>
 <LI><a href="#[b887c0]">FaultISR</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b830cc]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b830cc]">SysCtlDelay</a><BR>
 <LI><a href="#[b87f50]">UART_OutUHex</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b87f50]">UART_OutUHex</a><BR>
 <LI><a href="#[b87fc8]">UART_OutUDec</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b87fc8]">UART_OutUDec</a><BR>
 <LI><a href="#[b887fc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b887fc]">NmiSR</a><BR>
 <LI><a href="#[b887c0]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b887c0]">FaultISR</a><BR>
 <LI><a href="#[b88784]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b88784]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b8861c]">Reset_Handler</a>
 <LI><a href="#[b887fc]">NmiSR</a>
 <LI><a href="#[b887c0]">FaultISR</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b88784]">IntDefaultHandler</a>
 <LI><a href="#[b87938]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b8861c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b80a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b80a20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8861c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[b806d8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[b805ac]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b80354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b80570]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[b80354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b80480]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[b830cc]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[b830cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[b830cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[b878fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
</UL>

<P><STRONG><a name="[b880f4]"></a>UART_Init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b880b8]"></a>UART_InChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b87f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InString
<LI><a href="#[b87f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InUHex
<LI><a href="#[b88004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InUDec
</UL>

<P><STRONG><a name="[b8807c]"></a>UART_OutChar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b87974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutCRLF
<LI><a href="#[b87f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InString
<LI><a href="#[b87f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUHex
<LI><a href="#[b87f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InUHex
<LI><a href="#[b87fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUDec
<LI><a href="#[b88004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InUDec
<LI><a href="#[b88040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutString
</UL>

<P><STRONG><a name="[b88040]"></a>UART_OutString</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_OutString
</UL>
<BR>[Calls]<UL><LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b88004]"></a>UART_InUDec</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_InUDec
</UL>
<BR>[Calls]<UL><LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
<LI><a href="#[b880b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b87fc8]"></a>UART_OutUDec</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + In Cycle
<LI>Call Chain = UART_OutUDec &rArr;  UART_OutUDec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b87fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUDec
<LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b87fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUDec
</UL>

<P><STRONG><a name="[b87f8c]"></a>UART_InUHex</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_InUHex
</UL>
<BR>[Calls]<UL><LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
<LI><a href="#[b880b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b87f50]"></a>UART_OutUHex</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = UART_OutUHex &rArr;  UART_OutUHex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b87f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUHex
<LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b87f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUHex
</UL>

<P><STRONG><a name="[b87f14]"></a>UART_InString</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_InString
</UL>
<BR>[Calls]<UL><LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
<LI><a href="#[b880b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b87974]"></a>OutCRLF</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uarttestmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OutCRLF
</UL>
<BR>[Calls]<UL><LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b87938]"></a>main</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, uarttestmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b878fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[b87974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutCRLF
<LI><a href="#[b87f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InString
<LI><a href="#[b87f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUHex
<LI><a href="#[b87f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InUHex
<LI><a href="#[b87fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutUDec
<LI><a href="#[b88004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InUDec
<LI><a href="#[b88040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutString
<LI><a href="#[b8807c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
<LI><a href="#[b880f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[b80354]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b80570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[b805ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b80318]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b878fc]"></a>SysCtlClockSet</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b830cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[b87938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7ffd0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b7ff94]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b7ff58]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b887fc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b887fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[b887fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b887c0]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b887c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[b887c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b88784]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b88784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b88784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
